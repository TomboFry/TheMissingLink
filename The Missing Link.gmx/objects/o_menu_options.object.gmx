<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_menu_transition</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>items[0] = ds_map_create();
ds_map_add(items[0], MenuItem.Text, 'Fullscreen: ' + f_bool_string(window_get_fullscreen()));
ds_map_add(items[0], MenuItem.Type, MenuItemType.Variable);
ds_map_add(items[0], MenuItem.Enabled, true);

items[1] = ds_map_create();
ds_map_add(items[1], MenuItem.Text, 'Music: ' + f_float_percent(o_main.music, true));
ds_map_add(items[1], MenuItem.Type, MenuItemType.Variable);
ds_map_add(items[1], MenuItem.Enabled, true);

items[2] = ds_map_create();
ds_map_add(items[2], MenuItem.Text, 'SFX: ' + f_float_percent(o_main.sfx, true));
ds_map_add(items[2], MenuItem.Type, MenuItemType.Variable);
ds_map_add(items[2], MenuItem.Enabled, true);

items[3] = ds_map_create();
ds_map_add(items[3], MenuItem.Text, 'Scale: x' + string(o_main.scale));
ds_map_add(items[3], MenuItem.Type, MenuItemType.Variable);
ds_map_add(items[3], MenuItem.Enabled, !window_get_fullscreen());

items[4] = ds_map_create();
ds_map_add(items[4], MenuItem.Text, '&lt; Back');
ds_map_add(items[4], MenuItem.Type, MenuItemType.Action);
ds_map_add(items[4], MenuItem.Enabled, true);

offset_y = 64;

event_inherited();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (state == MenuTransition.Exit) {
    room_goto(r_menu_main);
} else {
    state = MenuTransition.Exit;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Scaling

var _horz = f_key_down(Controls.Right) - f_key_down(Controls.Left);

o_main.scale = clamp(o_main.scale + _horz, 1, 5);
f_fullscreen(false);

ds_map_replace(items[3], MenuItem.Text, 'Scale: x' + string(o_main.scale));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// SFX Level

var _horz = f_key_down(Controls.Right) - f_key_down(Controls.Left);

o_main.sfx = clamp(o_main.sfx + (_horz * 0.1), 0, 1);

ds_map_replace(items[2], MenuItem.Text, 'SFX: ' + f_float_percent(o_main.sfx, true));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Music Level

var _horz = f_key_down(Controls.Right) - f_key_down(Controls.Left);

o_main.music = clamp(o_main.music + (_horz * 0.1), 0, 1);

ds_map_replace(items[1], MenuItem.Text, 'Music: ' + f_float_percent(o_main.music, true));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Toggle Fullscreen
var fs = !window_get_fullscreen();
f_fullscreen(fs);

ds_map_replace(items[3], MenuItem.Enabled, !fs);

ds_map_replace(items[0], MenuItem.Text, 'Fullscreen: ' + f_bool_string(fs));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
